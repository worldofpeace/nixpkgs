diff --git a/src/Plug.vala b/src/Plug.vala
index 76fca34..aeb5a3a 100644
--- a/src/Plug.vala
+++ b/src/Plug.vala
@@ -65,7 +65,6 @@ public class About.Plug : Switchboard.Plug {
         search_results.set ("%s → %s".printf (display_name, _("Restore Default Settings")), "");
         search_results.set ("%s → %s".printf (display_name, _("Suggest Translation")), "");
         search_results.set ("%s → %s".printf (display_name, _("Report Problems")), "");
-        search_results.set ("%s → %s".printf (display_name, _("Updates")), "");
         return search_results;
     }
 
@@ -157,11 +156,11 @@ public class About.Plug : Switchboard.Plug {
             based_off = new Gtk.Label (_("Built on %s").printf (upstream_release));
             based_off.set_selectable (true);
         }
-        
+
         var kernel_version_label = new Gtk.Label (kernel_version);
         kernel_version_label.set_selectable (true);
 
-        var gtk_version_label = new Gtk.Label (_("GTK+ %s").printf (gtk_version));        
+        var gtk_version_label = new Gtk.Label (_("GTK+ %s").printf (gtk_version));
         gtk_version_label.set_selectable (true);
 
         var website_label = new Gtk.LinkButton.with_label (website_url, _("Website"));
@@ -202,16 +201,6 @@ public class About.Plug : Switchboard.Plug {
             issue_dialog.run ();
         });
 
-        // Update button
-        var update_button = new Gtk.Button.with_label (_("Check for Updates"));
-        update_button.clicked.connect (() => {
-            try {
-                Process.spawn_command_line_async ("io.elementary.appcenter --show-updates");
-            } catch (Error e) {
-                warning (e.message);
-            }
-        });
-
         // Restore settings button
         var settings_restore_button = new Gtk.Button.with_label (_("Restore Default Settings"));
         settings_restore_button.clicked.connect (settings_restore_clicked);
@@ -224,7 +213,6 @@ public class About.Plug : Switchboard.Plug {
         button_grid.add (settings_restore_button);
         button_grid.add (translate_button);
         button_grid.add (bug_button);
-        button_grid.add (update_button);
         button_grid.set_child_non_homogeneous (help_button, true);
 
         var software_grid = new Gtk.Grid ();
@@ -238,7 +226,7 @@ public class About.Plug : Switchboard.Plug {
             software_grid.attach (based_off, 0, 2, 2, 1);
         }
 
-        software_grid.attach (kernel_version_label, 0, 3, 2, 1);        
+        software_grid.attach (kernel_version_label, 0, 3, 2, 1);
         software_grid.attach (gtk_version_label, 0, 4, 2, 1);
         software_grid.attach (website_label, 0, 5, 2, 1);
 
@@ -297,16 +285,16 @@ public class About.Plug : Switchboard.Plug {
             settings.reset (key);
         }
     }
-    
+
     private static string[] get_pantheon_schemas () {
         string[] schemas = {};
         string[] pantheon_schemas = {};
         string[] prefixes = { "org.pantheon.desktop", "io.elementary.desktop", "org.gnome.desktop", "org.gnome.settings-daemon" };
-    
+
         var sss = SettingsSchemaSource.get_default ();
-    
+
         sss.list_schemas (true, out schemas, null);
-    
+
         foreach (var schema in schemas) {
             foreach (var prefix in prefixes) {
                 if (schema.has_prefix (prefix)) {
@@ -316,18 +304,18 @@ public class About.Plug : Switchboard.Plug {
         }
         return pantheon_schemas;
     }
-    
+
     private static void reset_recursively (string schema) {
         var settings = new GLib.Settings (schema);
         // change into delay mode
         // so changes take place when apply () is called
         settings.delay ();
-    
+
         reset_all_keys (settings);
-    
+
         foreach (var child in settings.list_children ()) {
             var child_settings = settings.get_child (child);
-    
+
             reset_all_keys (child_settings);
         }
         settings.apply ();
